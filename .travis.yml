language: node_js
node_js: 6
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/install_compose.sh ; fi
- cd application
before_script:
- npm update --dev
- npm run start:mongodb
script:
- sleep 15
- npm run lint
- npm run test
after_success:
- cd ..
- openssl aes-256-cbc -K $encrypted_09ff33532be1_key -iv $encrypted_09ff33532be1_iv -in deployment_keys.tar.enc -out deployment_keys.tar -d
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- npm run stop:mongodb
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: piHOz05GT11tJwKhQpxj0lVd1kxKYmmCfZLfDcJHb5xpRxNHGkKnQJitT5aX8MRvC0sjxmn62/0w6XYVtL8P25ZAF8cBHa5tzQfNQsXDdq003k+FGgY+aDIPqbXemRy99NDamG/3yl2e6M/P8PiIqjN2KpIAwGEFv0okO1m1i8O5gV4wt/fwbxFSV+UCGnUY6e3TWUCcmbYAnfrSPvvL7c669DQj9WxLB576CNN71B5AFGTqMUibo28iTgOBfYPquEIgsdGzzJs7vjuFxHrjkA6lQ6P2GRH/AO7LcERQO/6SxF0ZDIJIFySgwdIZ2qkb1PVVt4IJDLvIGVySW33i2mifr+y5O6CFO7zFwCd4S9hxwSAQQ0R4ZXC6w1cMJ/gAZZXqxh6GQuYKnNxaLEd442Hx87C+XonmI9Md+pvQTrRrB+o4vbKyK2R/GawJ1Lzb1A9k3Gpd/bzgzbf8qgRsC7CrT2Rize9QdUcwTfJ6Ob2YcUb5tYV3A238bGpjMTMgkVxyAmCGUiiNAUCG1DofMHF0ZOT7LqE7eInVgghRJr21hQu7pksObaqKHVWfiTfuL+khVaBSPkeOjJjysMcxOLQlsEBiPVv+CnN6ofKq6KjgwNoE2oYXcYKI1dHqOY6nu8C9ZWmYDl65W+uewnH9bbVQA1N9y59HTfpp0pMjo+0=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: m8yToCWyYFYlbPW+5o5fv0/k53vUwa+SS9mWXJTHoFXZZ1voGNZdQVM162hXrNKFPtBrUQktCh9R3edUQmKzHb9pzgVt/rrDST2cJEMS6yUJDuQGw3s7QMFohYqIHPRkKOexsYKUMPFDb35DkzzfhRtKXpoMiZY8rNXI3t4cXIXsN30RLjO0Yv33Q3pe/ploKhRoD618//DyGlyySaV5KzylE69z5Yv0x8YM424c1MWKeyK7xKB0ypWHz13cBcmSBL6Ubdd9ytoBYFWRceS+6gTGPVxzcvRHBqc6xDbo1BNV5LOEaDsEB+HrJ8q44QzYuZ5BFcORvyhVbLZcFs/hTFLb6hwi8eiRt8T6bZoun1kYewxgfMyOg6eLueb+P1YSUDkwE9W1tuFXTZTR8RZYsCF9ZW13YZodKtOIVUjAQRz0Bil7QJ4DEItVbOviTDPkH2N8eEpyFIx/9K17rG1A0H4w2UJUjAAcAwY0TK7qd2gUVcN1Arpj62txFgc3sNtO2rCeUf4WlcjzllCKFolf+UEYaXQEbookkxPUc10QBj+GlM4zsiMEhfrUrKtkczjL+qUq6NvuPo+91+4rcKmd4V1wqI7yAysKiaT1n3k1ttVZko5p0QeOjMT2sZBIhhdX+q3hhezbmx28UvtANboDtWHYuYgBaXRUMcf/swQm6Xk=
  - secure: skw2YvITRyFIXrM/V46b672mLo1zy4Lw4wSuRD5PR28sjND+ZMeZA4n3f0RfSOlV7SzwkuqE+xIPjLU5CwMpQ2YIQUZIAX1LawxfKWvwJg1o+K5/VxPDHhSS2juHPPy175XCYURxXcVud/frf7aM54vXKpj8WeJ1LAlrtFD4drHQOpIYLdZY3zZ4JR8EZ/W7owiUsNq+XI5nfv4Fx4kBvQtoM4UHcIQQwL0TrSu5wAr8rANQcGoD+LISpUt1SBfPKl76MLhErudkWDg58vAgQL02ABs/0QSctsLsUkV4cmgz5iQDIaGIeeaPPTaVAcK96cGPxjPFQdHaY5ORPJaIyGqwM1z9tnDKYXBzr0x5FvLDa9WybAG569QSSs63chA9z7I9rjr6L+dln6btpQXJ6gxoijmqsMEo97Fw6VBpXcYDoF65h6C7vYFKyb90JvA6+UWB0SNcqmslq7qN75dCUQvuHxBvtbDncFxTcvfrRV1I8WBKMvJCr9H+SpMVI1TpoEeun/lQTtrwJKTDXb45WnrnYYFHrnKmzoKgtyCcOGO1ilhMEEyckTunIG86bZAKjxpy7NL9S0fMoE5iM4DHq2G675nPniKd7Bq8nvJtgNNWxxwnxippvJ+HqA2bgCe5QLInZhh7QmS5v3od9ZflEKzKefJvhEUfnsNuHzxgUQ0=
  - secure: revuj5fOfy+/3S2S1ONRsWb4LmxkbZypH3ZQjt6tCI+umIu1xR3e5msTgkeYuSAXQfDWJZqeUUJkNNBWVONyxVc6xORIe7dk3r1/OdH0cPRCMF81Pe1XnyiXq76TpI/11ZgTFLbzURZ/w6+UeI8LqWpTz26472gN9sd0y8y8pcZymEC1QqNjiP1RyMo+5dA3g+HChjTv8S500sabJA3kzXKtE+CpBFzjB7QFTCCxREUqtNdNT0YLwSSbmupQw+DYsdeciDKe8aqrTNpgiTZ3DZSkh0nZ1SsjMbbAzrIZyKOPFuk+SZ1QfYkt2d0E2rdC+JoN4dP+utH5tfqL1zeHqMtUzIhwbKhbeGblkdKZfLJX8ZN0rSKHs+9wFiNHs5iWf4XIykKbTpUf6cUb+qlBHrNst6lD0RL7Vv0R6Mcp8lbR+guZlSxmj/pyQe58qyNQAVDAh1jniLSx/fEHVlCrIhGFm2uRu4wM/+2bEi2ePIHs9B85H0p/dZfhudnj6JbvWoHJAQP1nlNbU6KhjXrxdHvKHSS6v3awkZTJLqlTPuWc825SwxiGeQjZt32V/db+VO8bsSu2dwIg+EUkx/8MwzlVqSH9WttGa+MI5dY04pdxOfvNH4sEAUVglceH7XSfz3EQDgyO9dWVsaOaTwxOuyyQmKqBsJzwEn9GiR4wvBc=
